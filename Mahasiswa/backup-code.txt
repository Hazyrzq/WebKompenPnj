function displayPaymentPage($nim) {
    $pdo = connectDB();
    $output = '';

    try {
        // 1. Get payment data
        $verifiedPayment = getVerifiedPayment($pdo, $nim);
        $sisaKompen = getSisaJamKompen($nim);
        $paymentAmount = calculatePaymentAmount($sisaKompen);
        $showPayment = $sisaKompen > 1500;
        
        // 2. Start building output
        $output .= '<div class="container-fluid">';
        
        // 3. Show verified payment if exists
        if ($verifiedPayment && is_array($verifiedPayment) && !empty($verifiedPayment['PAYMENT_ID'])) {
            $output .= buildVerifiedPaymentAlert($verifiedPayment);
        }

        // 4. Main payment card
        $output .= '
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm rounded-3">
                    <div class="card-body p-4">
                        <h5 class="card-title mb-4">
                            <i class="fas fa-money-bill me-2"></i>Pembayaran Kompen
                        </h5>';

        if (!$showPayment) {
            $output .= buildNoPaymentRequired();
        } else {
            // Check for pending payments - Modified for Oracle
            $sql = "SELECT p.PAYMENT_ID, p.AMOUNT, p.PAYMENT_METHOD, p.PAYMENT_CHANNEL, 
                   p.VIRTUAL_ACCOUNT, p.CREATED_AT, p.STATUS
                FROM TBL_PAYMENTS p 
                WHERE p.NIM = :nim 
                AND p.STATUS = 'pending' 
                AND ROWNUM = 1
                ORDER BY p.CREATED_AT DESC";

            $stmt = $pdo->prepare($sql);
            $stmt->execute(['nim' => $nim]);
            $pendingPayment = $stmt->fetch(PDO::FETCH_ASSOC);

            // Show payment info card
            $output .= buildPaymentInfoCard($sisaKompen, $paymentAmount);

            // Show pending payment alert or payment form - Modified condition
            if ($pendingPayment) {
                $paymentId = htmlspecialchars($pendingPayment['PAYMENT_ID']);
                $output .= '
                <div class="alert alert-warning mb-4" role="alert">
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-clock me-2"></i>
                        <div>
                            <strong>Pembayaran Pending</strong><br>
                            Anda memiliki pembayaran yang belum diselesaikan
                        </div>
                    </div>
                    <div class="d-flex justify-content-center gap-2">
                        <button type="button" class="btn btn-secondary" id="cancelBtn">
                            <i class="fas fa-times me-2"></i>Batalkan Pembayaran
                        </button>
                        <button type="button" class="btn btn-primary" id="checkStatusBtn">
                            <i class="fas fa-sync-alt me-2"></i>Cek Status
                        </button>
                    </div>
                </div>

                <script>
                document.addEventListener("DOMContentLoaded", function() {
                    const paymentId = "' . $paymentId . '";
                    
                    // Cancel Button
                    document.getElementById("cancelBtn").addEventListener("click", function() {
    Swal.fire({
        title: "Konfirmasi Pembatalan",
        text: "Apakah Anda yakin ingin membatalkan pembayaran ini?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Ya, Batalkan",
        cancelButtonText: "Tidak",
        showLoaderOnConfirm: true,
        preConfirm: async () => {
            try {
                const formData = new FormData();
                formData.append("payment_id", paymentId);
                
                const response = await fetch("cancel_payment.php", {
                    method: "POST",
                    body: formData,
                    headers: {
                        "Accept": "application/json"
                    }
                });
                
                // Check if response is ok
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || "Gagal membatalkan pembayaran");
                }

                const data = await response.json();
                if (!data.success) {
                    throw new Error(data.message || "Gagal membatalkan pembayaran");
                }
                
                return data;
            } catch (error) {
                Swal.showValidationMessage(`Request failed: ${error.message}`);
            }
        },
        allowOutsideClick: () => !Swal.isLoading()
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                icon: "success",
                title: "Berhasil",
                text: "Pembayaran telah dibatalkan",
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        }
    });
});

                    // Check Status Button
                    document.getElementById("checkStatusBtn").addEventListener("click", function() {
                        const verifyWindow = window.open(
                            "payment_verify_buttons.php?payment_id=" + encodeURIComponent(paymentId),
                            "PaymentVerification",
                            "width=500,height=400,resizable=yes,scrollbars=yes"
                        );
                    });
                });
                </script>';
            } else {
                $output .= buildPaymentMethodsForm();
            }
        }

        $output .= '
                    </div>
                </div>
            </div>
        </div>
    </div>';

        // Add styles and scripts
        $output .= buildStyles();
        if (!$pendingPayment) {
            $output .= buildScripts($nim, $paymentAmount);
        }

    } catch (Exception $e) {
        $output .= '<div class="alert alert-danger">Error: ' . htmlspecialchars($e->getMessage()) . '</div>';
    }

    return $output;
}

function getVerifiedPayment($pdo, $nim) {
    try {
        $sql = "SELECT p.payment_id, p.amount, p.payment_method, p.payment_channel, 
                p.virtual_account, p.created_at, p.status, p.verified_at,
                CASE 
                    WHEN pr.report_id IS NOT NULL THEN 1 
                    ELSE 0 
                END as has_report
                FROM tbl_payments p
                LEFT JOIN tbl_payment_reports pr ON p.payment_id = pr.payment_id 
                WHERE p.nim = :nim 
                AND p.status = 'verified'
                ORDER BY p.verified_at DESC
                LIMIT 1";
                
        $stmt = $pdo->prepare($sql);
        $stmt->execute(['nim' => $nim]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$result) {
            return null;
        }
        
        $defaultKeys = [
            'payment_id' => null,
            'amount' => 0,
            'payment_method' => '',
            'payment_channel' => '',
            'virtual_account' => '',
            'created_at' => null,
            'status' => '',
            'verified_at' => null,
            'has_report' => 0
        ];
        
        return array_merge($defaultKeys, $result);
    } catch (PDOException $e) {
        error_log("Error in getVerifiedPayment: " . $e->getMessage());
        return null;
    }
}

// Modified buildVerifiedPaymentAlert function
function buildVerifiedPaymentAlert($payment) {
    $downloadButton = $payment['has_report'] ? 
        '<a href="download_report.php?payment_id=' . htmlspecialchars($payment['payment_id']) . '" 
            class="btn btn-sm btn-outline-success" target="_blank">
            <i class="fas fa-download me-1"></i>Download Bukti
        </a>' : '';

    return '
    <div class="alert alert-success d-flex align-items-center justify-content-between mb-4" role="alert">
        <div class="d-flex align-items-center">
            <i class="fas fa-check-circle me-2"></i>
            <div>
                <strong>Pembayaran Terverifikasi</strong><br>
                Pembayaran kompen Anda telah diverifikasi pada ' . date('d/m/Y H:i', strtotime($payment['verified_at'])) . '
            </div>
        </div>
        <div>' . $downloadButton . '</div>
    </div>';
}

// dalam bentuk jam
function displayListPekerjaanWithSearch($currentPage = 1) {
    try {
        $itemsPerPage = 6;
        $jobs = getAvailablePekerjaan();

        if (empty($jobs)) {
            return '<div class="alert alert-info">
                Belum ada pekerjaan yang tersedia saat ini.
            </div>';
        }

        // Get unique supervisors and hours for filters
        $supervisors = array_unique(array_column($jobs, 'PENANGGUNG_JAWAB'));
        $hours = array_unique(array_column($jobs, 'JAM_PEKERJAAN'));
        sort($supervisors);
        sort($hours);

        $output = '<div id="jobListingContainer">
        <div class="row mb-4">
            <div class="col-md-6 mb-3">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchInput" placeholder="Cari kode atau nama pekerjaan">
                    <button class="btn btn-outline-secondary" type="button">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <select class="form-select" id="supervisorFilter">
                    <option value="">Semua Pengawas</option>';
        foreach ($supervisors as $supervisor) {
            $output .= '<option value="' . htmlspecialchars($supervisor) . '">' . htmlspecialchars($supervisor) . '</option>';
        }
        $output .= '</select>
            </div>
            <div class="col-md-3 mb-3">
                <select class="form-select" id="hoursFilter">
                    <option value="">Semua Jam</option>';
        foreach ($hours as $hour) {
            $output .= '<option value="' . htmlspecialchars($hour) . '">' . htmlspecialchars($hour) . '</option>';
        }
        $output .= '</select>
            </div>
        </div>';

        // Store all jobs data for client-side filtering and pagination
        $output .= '<script>
            window.allJobs = ' . json_encode($jobs) . ';
            window.itemsPerPage = ' . $itemsPerPage . ';
        </script>';
        
        $output .= '<div class="row" id="jobList"></div>
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination" id="pagination"></ul>
            </nav>
        </div>

        <script>
        document.addEventListener("DOMContentLoaded", function() {
            let currentPage = 1;
            let filteredJobs = window.allJobs;
            
            // Cache DOM elements
            const jobList = document.getElementById("jobList");
            const pagination = document.getElementById("pagination");
            const searchInput = document.getElementById("searchInput");
            const supervisorFilter = document.getElementById("supervisorFilter");
            const hoursFilter = document.getElementById("hoursFilter");
            
            function filterJobs() {
                const searchText = searchInput.value.toLowerCase();
                const selectedSupervisor = supervisorFilter.value;
                const selectedHours = hoursFilter.value;
                
                filteredJobs = window.allJobs.filter(job => {
                    const matchesSearch = !searchText || 
                        job.NAMA_PEKERJAAN.toLowerCase().includes(searchText) || 
                        job.KODE_PEKERJAAN.toLowerCase().includes(searchText);
                        
                    const matchesSupervisor = !selectedSupervisor || 
                        job.PENANGGUNG_JAWAB === selectedSupervisor;
                        
                    const matchesHours = !selectedHours || 
                        job.JAM_PEKERJAAN === selectedHours;
                    
                    return matchesSearch && matchesSupervisor && matchesHours;
                });

                currentPage = 1;
                displayJobs();
            }

            function displayJobs() {
                const startIndex = (currentPage - 1) * window.itemsPerPage;
                const endIndex = startIndex + window.itemsPerPage;
                const paginatedJobs = filteredJobs.slice(startIndex, endIndex);
                
                if (paginatedJobs.length === 0) {
                    jobList.innerHTML = `
                        <div class="col-12">
                            <div class="alert alert-info text-center">
                                Tidak ada pekerjaan yang sesuai dengan filter yang dipilih.
                            </div>
                        </div>`;
                    pagination.style.display = "none";
                    return;
                }

                let jobsHtml = "";
                paginatedJobs.forEach(job => {
                    const availableSlots = parseInt(job.BATAS_PEKERJA) - parseInt(job.CURRENT_WORKERS);
                    jobsHtml += `
                        <div class="col-md-4 mb-4 job-item">
                            <div class="card job-card h-100">
                                <div class="card-body">
                                    <h5 class="card-title">${job.NAMA_PEKERJAAN}</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">Kode: ${job.KODE_PEKERJAAN}</h6>
                                    <div class="job-details">
                                        <p><i class="fas fa-clock me-2"></i>Durasi: ${job.JAM_PEKERJAAN} Jam</p>
                                        <p><i class="fas fa-users me-2"></i>Pekerja: ${job.CURRENT_WORKERS}/${job.BATAS_PEKERJA}</p>
                                        <p class="${availableSlots > 0 ? "text-success" : "text-danger"}">
                                            Slot tersedia: ${availableSlots}
                                        </p>
                                        <p><i class="fas fa-user-tie me-2"></i>PJ: ${job.PENANGGUNG_JAWAB}</p>
                                    </div>
                                    <button class="btn btn-primary w-100 mt-3" onclick="showJobDetails(\'${job.KODE_PEKERJAAN}\')">
                                        Detail
                                    </button>
                                </div>
                            </div>
                        </div>`;
                });
                
                jobList.innerHTML = jobsHtml;
                updatePagination();
            }

            function updatePagination() {
                const totalPages = Math.ceil(filteredJobs.length / window.itemsPerPage);
                
                if (totalPages <= 1) {
                    pagination.style.display = "none";
                    return;
                }

                pagination.style.display = "flex";
                let paginationHtml = "";

                // Previous button
                paginationHtml += `
                    <li class="page-item ${currentPage === 1 ? "disabled" : ""}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>`;

                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    paginationHtml += `
                        <li class="page-item ${currentPage === i ? "active" : ""}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>`;
                }

                // Next button
                paginationHtml += `
                    <li class="page-item ${currentPage === totalPages ? "disabled" : ""}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>`;

                pagination.innerHTML = paginationHtml;
            }

            // Event Listeners
            searchInput.addEventListener("input", debounce(filterJobs, 300));
            supervisorFilter.addEventListener("change", filterJobs);
            hoursFilter.addEventListener("change", filterJobs);

            pagination.addEventListener("click", function(e) {
                e.preventDefault();
                const link = e.target.closest(".page-link");
                if (!link || link.parentElement.classList.contains("disabled")) return;

                const newPage = parseInt(link.dataset.page);
                if (newPage && newPage !== currentPage) {
                    currentPage = newPage;
                    displayJobs();
                    window.scrollTo({ top: 0, behavior: "smooth" });
                }
            });

            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Initial display
            displayJobs();
        });
        </script>
        </div>';

        return $output;
    } catch (Exception $e) {
        error_log("Error in displayListPekerjaanWithSearch: " . $e->getMessage());
        return '<div class="alert alert-danger">
            Terjadi kesalahan saat memuat daftar pekerjaan: ' . htmlspecialchars($e->getMessage()) . '
        </div>';
    }
}

function displayPengajuanForm($nim) {
        $sisaKompen = getSisaJamKompen($nim);
        
        // Handle AJAX request
        if (isset($_GET['ajax']) && $_GET['ajax'] == 1) {
            $currentPage = isset($_GET['form_page']) ? (int)$_GET['form_page'] : 1;
            $rowsPerPage = 5;
            $offset = ($currentPage - 1) * $rowsPerPage;
            $totalRows = getTotalPekerjaan();
            $totalPages = ceil($totalRows / $rowsPerPage);
            
            $output = '<div class="row g-4">';
            
            $availablePekerjaan = getAvailablePekerjaanPaginated($offset, $rowsPerPage);
            foreach ($availablePekerjaan as $pekerjaan) {
                $availableSlots = $pekerjaan['BATAS_PEKERJA'] - $pekerjaan['CURRENT_WORKERS'];
                $disabled = ($availableSlots <= 0) ? 'disabled' : '';
                
                $output .= '
                <div class="col-md-6">
                    <div class="job-card">
                        <div class="job-card-header">
                            <div class="form-check">
                                <input type="checkbox" 
                                    class="form-check-input pekerjaan-checkbox" 
                                    name="pekerjaan[]" 
                                    value="' . $pekerjaan['KODE_PEKERJAAN'] . '"
                                    data-jam="' . $pekerjaan['JAM_PEKERJAAN'] . '"
                                    data-pj="' . htmlspecialchars($pekerjaan['PENANGGUNG_JAWAB']) . '"
                                    ' . $disabled . '>
                                <label class="form-check-label">
                                    <span class="job-code">' . htmlspecialchars($pekerjaan['KODE_PEKERJAAN']) . '</span>
                                </label>
                            </div>
                            <span class="slot-badge ' . ($availableSlots > 0 ? 'available' : 'full') . '">
                                <i class="fas fa-user-friends"></i> ' . $availableSlots . '/' . $pekerjaan['BATAS_PEKERJA'] . ' slot
                            </span>
                        </div>
                        
                        <div class="job-card-body">
                            <h5 class="job-title">' . htmlspecialchars($pekerjaan['NAMA_PEKERJAAN']) . '</h5>
                            <div class="job-detail">
                                <p class="detail-text">' . nl2br(htmlspecialchars($pekerjaan['DETAIL_PEKERJAAN'])) . '</p>
                            </div>
                            <div class="job-info">
                                <div class="info-item">
                                    <i class="fas fa-user-tie"></i>
                                    <span>' . htmlspecialchars($pekerjaan['PENANGGUNG_JAWAB']) . '</span>
                                </div>
                                <div class="info-item">
                                    <i class="fas fa-clock"></i>
                                    <span>' . $pekerjaan['JAM_PEKERJAAN'] . ' jam</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>';
            }
            $output .= '</div>';
            
            // Add pagination
            $output .= '<div class="pagination-container mt-4">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">';
        
            // Previous button
            $prevDisabled = $currentPage <= 1 ? ' disabled' : '';
            $output .= '<li class="page-item' . $prevDisabled . '">
                            <a class="page-link" data-page="' . ($currentPage - 1) . '" href="javascript:void(0)" ' . ($prevDisabled ? 'tabindex="-1" aria-disabled="true"' : '') . '>
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>';
            
            // Page numbers
            for ($i = 1; $i <= $totalPages; $i++) {
                $active = $currentPage == $i ? ' active' : '';
                $output .= '<li class="page-item' . $active . '">
                                <a class="page-link" data-page="' . $i . '" href="javascript:void(0)">' . $i . '</a>
                            </li>';
            }
            
            // Next button
            $nextDisabled = $currentPage >= $totalPages ? ' disabled' : '';
            $output .= '<li class="page-item' . $nextDisabled . '">
                            <a class="page-link" data-page="' . ($currentPage + 1) . '" href="javascript:void(0)" ' . ($nextDisabled ? 'tabindex="-1" aria-disabled="true"' : '') . '>
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>';
            
            $output .= '</ul></nav></div>';
            
            echo $output;
            exit;
        }
        
        // Regular page display
        $totalRows = getTotalPekerjaan();
        $rowsPerPage = 5;
        $totalPages = ceil($totalRows / $rowsPerPage);
        $currentPage = isset($_GET['form_page']) ? (int)$_GET['form_page'] : 1;
        $offset = ($currentPage - 1) * $rowsPerPage;
        
        $output = '
        <div class="submission-wrapper">
            <form id="formPengajuan" method="POST" action="process_pengajuan.php">
                <input type="hidden" name="nim" value="' . $nim . '">
                <input type="hidden" id="sisaKompen" value="' . $sisaKompen . '">
                <input type="hidden" id="selectedPJ" name="selected_pj" value="">
                
                <!-- Summary Section -->
                <div class="submission-summary mb-4">
                    <div class="summary-card">
                        <div class="summary-header">
                            <h5><i class="fas fa-clipboard-check me-2"></i>Ringkasan Pengajuan</h5>
                        </div>
                        <div class="summary-content">
                            <div class="summary-item">
                                <i class="fas fa-clock"></i>
                                <div class="item-content">
                                    <span class="item-label">Total waktu terpilih</span>
                                    <span class="item-value" id="totalWaktu">0 jam</span>
                                </div>
                            </div>
                            <div class="summary-item">
                                <i class="fas fa-user-tie"></i>
                                <div class="item-content">
                                    <span class="item-label">Pengawas terpilih</span>
                                    <span class="item-value" id="selectedPJName">-</span>
                                </div>
                            </div>
                            <div class="progress mt-3">
                                <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%"></div>
                            </div>
                        </div>
                        <!-- Action Buttons -->
                        <div class="action-buttons mt-4">
                            <a href="?page=pengajuan" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Kembali
                            </a>
                            <button type="submit" class="btn btn-primary" id="submitPengajuan" disabled>
                                <i class="fas fa-save me-2"></i>Submit Pengajuan
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Jobs Section -->
                <div class="jobs-section">
                <!-- Filter Section -->
    <div class="filter-section mb-4">
        <div class="card">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-user-tie me-2"></i>Filter Pengawas
                            </label>
                            <select class="form-select" id="filterPengawasNew">
                                <option value="">Semua Pengawas</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-clock me-2"></i>Filter Jam Kompen
                            </label>
                            <select class="form-select" id="filterJamNew">
                                <option value="">Semua Jam</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-4 d-flex align-items-end">
                        <button type="button" class="btn btn-light w-100" id="resetFiltersNew">
                            <i class="fas fa-sync-alt me-2"></i>Reset Filter
                        </button>
                    </div>
                </div>
            </div>
        </div>
                    <div class="job-cards-container">';
                    
        // Initial job cards
        $availablePekerjaan = getAvailablePekerjaanPaginated($offset, $rowsPerPage);
        $output .= '<div class="row g-4">';
        foreach ($availablePekerjaan as $pekerjaan) {
            $availableSlots = $pekerjaan['BATAS_PEKERJA'] - $pekerjaan['CURRENT_WORKERS'];
            $disabled = ($availableSlots <= 0) ? 'disabled' : '';
            
            $output .= '
            <div class="col-md-6">
                <div class="job-card">
                    <div class="job-card-header">
                        <div class="form-check">
                            <input type="checkbox" 
                                class="form-check-input pekerjaan-checkbox" 
                                name="pekerjaan[]" 
                                value="' . $pekerjaan['KODE_PEKERJAAN'] . '"
                                data-jam="' . $pekerjaan['JAM_PEKERJAAN'] . '"
                                data-pj="' . htmlspecialchars($pekerjaan['PENANGGUNG_JAWAB']) . '"
                                ' . $disabled . '>
                            <label class="form-check-label">
                                <span class="job-code">' . htmlspecialchars($pekerjaan['KODE_PEKERJAAN']) . '</span>
                            </label>
                        </div>
                        <span class="slot-badge ' . ($availableSlots > 0 ? 'available' : 'full') . '">
                            <i class="fas fa-user-friends"></i> ' . $availableSlots . '/' . $pekerjaan['BATAS_PEKERJA'] . ' slot
                        </span>
                    </div>
                    
                    <div class="job-card-body">
                        <h5 class="job-title">' . htmlspecialchars($pekerjaan['NAMA_PEKERJAAN']) . '</h5>
                        <div class="job-detail">
                            <p class="detail-text">' . nl2br(htmlspecialchars($pekerjaan['DETAIL_PEKERJAAN'])) . '</p>
                        </div>
                        <div class="job-info">
                            <div class="info-item">
                                <i class="fas fa-user-tie"></i>
                                <span>' . htmlspecialchars($pekerjaan['PENANGGUNG_JAWAB']) . '</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock"></i>
                                <span>' . $pekerjaan['JAM_PEKERJAAN'] . ' jam</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>';
        }
        $output .= '</div>';

        // Initial pagination
        $output .= '<div class="pagination-container mt-4">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">';
        
        // Previous button
        $prevDisabled = $currentPage <= 1 ? ' disabled' : '';
        $output .= '<li class="page-item' . $prevDisabled . '">
                        <a class="page-link" data-page="' . ($currentPage - 1) . '" href="javascript:void(0)" ' . ($prevDisabled ? 'tabindex="-1" aria-disabled="true"' : '') . '>
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>';
        
        // Page numbers
        for ($i = 1; $i <= $totalPages; $i++) {
            $active = $currentPage == $i ? ' active' : '';
            $output .= '<li class="page-item' . $active . '">
                            <a class="page-link" data-page="' . $i . '" href="javascript:void(0)">' . $i . '</a>
                        </li>';
        }
        
        // Next button
        $nextDisabled = $currentPage >= $totalPages ? ' disabled' : '';
        $output .= '<li class="page-item' . $nextDisabled . '">
                        <a class="page-link" data-page="' . ($currentPage + 1) . '" href="javascript:void(0)" ' . ($nextDisabled ? 'tabindex="-1" aria-disabled="true"' : '') . '>
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>';
        
        $output .= '</ul>
                    </nav>
                </div>
            </div>
            </form>
        </div>

    <style>
    .filter-section .card {
    border: none;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    transition: transform 0.2s;
}

.filter-section .card:hover {
    transform: translateY(-2px);
}

.filter-section .form-label {
    font-size: 0.9rem;
    font-weight: 500;
    color: #4b5563;
    margin-bottom: 0.5rem;
}

.filter-section .form-select {
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    padding: 0.6rem 1rem;
    font-size: 0.95rem;
    color: #1f2937;
    background-color: white;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.filter-section .form-select:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.1);
}

.filter-section .btn-light {
    background-color: #f9fafb;
    border: 1px solid #e5e7eb;
    color: #4b5563;
    padding: 0.6rem 1rem;
    font-weight: 500;
    transition: all 0.2s;
}

.filter-section .btn-light:hover {
    background-color: #f3f4f6;
    transform: translateY(-2px);
}

.job-card.filtered {
    display: none;
}
    .submission-wrapper {
        max-width: 1200px;
        margin: 0 auto;
    }

    .progress-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .progress-label {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
        color: #4a5568;
    }

    .progress-percentage {
        font-weight: 600;
        color: #2d3748;
    }

    .progress {
        height: 8px;
        background-color: #edf2f7;
        border-radius: 4px;
        overflow: hidden;
    }

    .progress-bar.bg-gradient {
        background: linear-gradient(45deg, #4f46e5, #6366f1);
    }

    .progress-stats {
        display: flex;
        margin-top: 1.5rem;
        gap: 2rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .stat-item i {
        font-size: 1.5rem;
        color: #6366f1;
    }

    .stat-content {
        display: flex;
        flex-direction: column;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .stat-value {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1f2937;
    }

    .job-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: transform 0.2s, box-shadow 0.2s;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .jobs-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        padding: 1.5rem;
        margin-top: 1rem;
    }

    .job-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .job-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .job-code {
        font-family: monospace;
        font-size: 0.875rem;
        color: #6b7280;
        margin-left: 0.5rem;
    }

    .slot-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .slot-badge.available {
        background: #dcfce7;
        color: #166534;
    }

    .slot-badge.full {
        background: #fee2e2;
        color: #991b1b;
    }

    .job-card-body {
        padding: 1rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .job-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.75rem;
    }

    .job-detail {
        background: #f8fafc;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        flex-grow: 1;
    }

    .detail-text {
        font-size: 0.875rem;
        color: #4b5563;
        line-height: 1.5;
        margin: 0;
    }

    .job-info {
        display: flex;
        gap: 1rem;
        margin-top: auto;
    }

    .info-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: #6b7280;
    }

    .info-item i {
        color: #6366f1;
    }

    .summary-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        padding: 1.5rem;
    }

    .summary-header {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .summary-header h5 {
        margin: 0;
        color: #1f2937;
        font-weight: 600;
    }

    .summary-content {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .summary-item {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .summary-item i {
        font-size: 1.25rem;
        color: #6366f1;
    }

    .item-content {
        display: flex;
        flex-direction: column;
    }

    .item-label {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .item-value {
        font-size: 1rem;
        font-weight: 500;
        color: #1f2937;
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
    }

    .pagination-container {
        margin: 2rem 0;
    }

    .pagination {
        gap: 0.25rem;
    }

    .page-link {
        border: none;
        padding: 0.5rem 1rem;
        color: #6b7280;
        border-radius: 6px;
    }

    .page-link:hover {
        background-color: #f3f4f6;
        color: #4b5563;
    }

    .page-item.active .page-link {
        background-color: #6366f1;
        color: white;
    }

    .page-item.disabled .page-link {
        background-color: transparent;
        color: #d1d5db
    }
    @media (max-width: 768px) {
        .progress-stats {
            flex-direction: column;
            gap: 1rem;
        }

        .job-cards-container .col-md-6 {
            width: 100%;
        }

        .action-buttons {
            flex-direction: column-reverse;
        }

        .action-buttons .btn {
            width: 100%;
        }

        .summary-item {
            flex-direction: column;
            align-items: flex-start;
            text-align: left;
        }
    }
    .submission-wrapper {
    max-width: 100%; /* Changed from 1200px to 100% */
    margin: 0;        /* Remove margin auto */
    padding: 0 1rem;  /* Add small padding on sides */
}

/* Update section layouts */
.jobs-section {
    margin-left: -1rem;  /* Extend to edge of sidebar */
    margin-right: -1rem; /* Extend to right edge */
    border-radius: 0;    /* Remove border radius since it extends to edges */
    padding: 1.5rem;
}

/* Update card grid */
.row.g-4 {
    margin: 0;     /* Remove default row margin */
    width: 100%;   /* Ensure full width */
}

/* Make cards slightly larger */
.job-card {
    margin-bottom: 1rem;
}

/* Adjust summary card */
.summary-card {
    margin-left: -1rem;  /* Extend to sidebar */
    margin-right: -1rem; /* Extend to right edge */
    border-radius: 0;    /* Remove border radius */
    padding: 2rem;       /* Increase padding */
}

/* Adjust pagination container */
.pagination-container {
    margin: 2rem -1rem; /* Negative margin to extend full width */
    padding: 0 1rem;    /* Add padding to maintain content alignment */
}

/* Update main-content padding when sidebar is collapsed */
#main-content.expanded .submission-wrapper {
    padding: 0 2rem;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .submission-wrapper {
        padding: 0 0.5rem;
    }
    
    .jobs-section,
    .summary-card {
        margin-left: -0.5rem;
        margin-right: -0.5rem;
        padding: 1rem;
    }
}
    </style>

    <script>
    
    </script>';

    return $output;
}

function getSisaJamKompen($nim) {
    try {
        global $conn;
        // Get total minutes kompen
        $totalMenit = getTotalJamKompen($nim);
        
        // Get sum of all non-rejected pengajuan minutes
        $sql = "SELECT NVL(SUM(TO_NUMBER(REPLACE(pd.jam_pekerjaan, ',', '.')) * 60), 0) as used_minutes
                FROM tbl_pengajuan_detail pd 
                JOIN tbl_pengajuan pg ON pd.kode_kegiatan = pg.kode_kegiatan 
                WHERE pg.kode_user = :nim 
                AND UPPER(pg.status) != 'REJECTED'";
                
        $stmt = executeQuery($sql, ['nim' => $nim]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        $usedMenit = intval($result['USED_MINUTES']);
        
        error_log("Total menit: " . $totalMenit);
        error_log("Used menit: " . $usedMenit);
        error_log("Sisa menit: " . ($totalMenit - $usedMenit));
        
        return max(0, $totalMenit - $usedMenit);
    } catch (Exception $e) {
        error_log("Error in getSisaJamKompen: " . $e->getMessage());
        error_log("Stack trace: " . $e->getTraceAsString());
        return $totalMenit;
    }
}


PEMBAYARAN
function initPaymentButton(nim, amount) {
    const button = document.getElementById("pay-button");
    if (!button) return;

    button.onclick = async function() {
        try {
            // Show loading state
            button.disabled = true;
            button.innerHTML = `<span class="spinner-border spinner-border-sm me-2"></span>Memproses...`;

            // Request payment token
            const response = await fetch("get_snap_token.php", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify({
                    nim: nim,
                    amount: amount
                })
            });

            // Check if response is JSON
            const contentType = response.headers.get("content-type");
            if (!contentType || !contentType.includes("application/json")) {
                throw new Error("Invalid response format from server");
            }

            const data = await response.json();
            
            if (!data.success) {
                throw new Error(data.message || "Failed to get payment token");
            }

            // Initialize payment
            window.snap.pay(data.token, {
                onSuccess: function(result) {
                    handlePaymentCallback("success", result, data.order_id);
                },
                onPending: function(result) {
                    handlePaymentCallback("pending", result, data.order_id);
                },
                onError: function(result) {
                    handlePaymentCallback("error", result, data.order_id);
                },
                onClose: function() {
                    resetPayButton(button);
                }
            });

        } catch (error) {
            console.error("Payment Error:", error);
            Swal.fire({
                icon: "error",
                title: "Gagal Memproses Pembayaran",
                text: error.message || "Terjadi kesalahan saat memproses pembayaran"
            });
            resetPayButton(button);
        }
    };
}

function handlePaymentCallback(status, result, orderId) {
    switch(status) {
        case "success":
            Swal.fire({
                icon: "success",
                title: "Pembayaran Berhasil",
                text: "Halaman akan diperbarui secara otomatis",
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                window.location.reload();
            });
            break;
            
        case "pending":
            Swal.fire({
                icon: "info",
                title: "Pembayaran Pending",
                text: "Silakan selesaikan pembayaran Anda",
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                window.location.reload();
            });
            break;
            
        case "error":
            Swal.fire({
                icon: "error",
                title: "Pembayaran Gagal",
                text: result.status_message || "Silakan coba lagi"
            });
            resetPayButton();
            break;
    }
}

function resetPayButton(button) {
    if (!button) {
        button = document.getElementById("pay-button");
    }
    if (button) {
        button.disabled = false;
        button.innerHTML = `<i class="fas fa-credit-card me-2"></i>Bayar Sekarang`;
    }
}

bk download
if ($totalKompenMenit === 0) {
            $output = '
            <div class="alert alert-success mb-4">
                <h4 class="alert-heading"><i class="fas fa-certificate me-2"></i>Selamat, Anda Bebas Kompen!</h4>
                <p>Anda tidak memiliki kompensasi yang perlu diselesaikan.</p>
                <hr>
                <div class="d-flex justify-content-end">
                    <a href="generate_surat_bk.php?nim=' . $nim . '" class="btn btn-primary">
                        <i class="fas fa-download me-2"></i>Unduh Surat Bebas Kompen
                    </a>
                </div>
            </div>';